 HibernateUtilities is where our hibernate session-factory is constructed. 
 The session-factory is the first step of java hibernate, because it contains configuration that join the java 
 application (via hibernate) to the database.

 ----------------------------------------| What is a session-factory? |---------------------------------------------

 Session-factory is a thread-safe and immutable feature that allows us to create session. It's a feature that needs 
 to be executed once the applications start-up, and from then we starts to make sessions, which are parts of the 
 code that go back and forth from the java application to the database. 
 It's thread safe and immutable(they can't change)

 ::Note::
 A good way to look at session-factory, is to consider it a car manufacturing plant (factory), which builds 
 cars(sessions); once a car factory is built, it start producing car, but without the factory, we would not 
 be able to make cars(session). 
 
 ----------------------------------| How are session-factories made? |----------------------------------------------
 
 They are made by getting data from the hibernate.cfg.xml which you have configure. The hibernate.cfg.xml contains 
 data regarding the database location, database type, user-name, and etc.
 
 In order for that to happen, we need to create an object of the configuration class, which intern will executed to
 extract data from the hibernate.cfg.xml file.
 
 e.g.
 
 	Configuration configuration = new Configuration().configure(); // this calls hibernate.cfg.xml
 	
	ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder().applySettings(configuration.getProperties()).build();
	// starts making by getting all the data from the configuaration object.
	
	sessionFactory = configuration.buildSessionFactory(serviceRegistry); // makes the session factory